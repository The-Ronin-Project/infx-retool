id: check_current_registry
type: datasource
subtype: SqlQueryUnified
resourceName: dc8029bc-3980-4836-841e-776c64eeca49
resourceDisplayName: Clinical Content PostgresSQL DB
template:
  ordered:
    - queryRefreshTime: ''
    - records: ''
    - lastReceivedFromResourceAt: null
    - databasePasswordOverride: ''
    - queryDisabledMessage: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - showFailureToaster: true
    - query: |-
        SELECT * FROM data_ingestion.registry 
        WHERE
        concept_map_uuid = {{concept_map_select.selectedItem.concept_map_uuid}}
        and version = {{concept_map_select.selectedItem.mx_version}} 
        and resource_type = {{resource_type_select.value}}
        and tenant_id = {{ tenant_id_select.value }}
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - privateParams: []
    - runWhenPageLoadsDelay: ''
    - warningCodes: []
    - data: null
    - recordId: ''
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: false
    - dataArray: []
    - cacheKeyTtl: ''
    - filterBy: ''
    - databaseHostOverride: ''
    - metadata: null
    - editorMode: sql
    - actionType: ''
    - changesetObject: ''
    - shouldUseLegacySql: false
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - databaseNameOverride: ''
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - enableBulkUpdates: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - bulkUpdatePrimaryKey: ''
    - runWhenPageLoads: false
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        - ordered:
            - method: trigger
            - enabled: '{{check_current_registry.data.registry_uuid[0] === undefined}}'
            - params:
                ordered: []
            - targetId: null
            - pluginId: insert_registry
            - waitType: debounce
            - event: success
            - type: datasource
            - waitMs: '0'
        - ordered:
            - method: showNotification
            - enabled: '{{check_current_registry.data.registry_uuid[0] !== undefined}}'
            - params:
                ordered:
                  - options:
                      ordered:
                        - notificationType: warning
                        - title: 'ConceptMap Info:'
                        - description: >-
                            The conceptmap and version are already in the the
                            registry
                        - duration: '4'
            - targetId: null
            - pluginId: ''
            - waitType: debounce
            - event: success
            - type: util
            - waitMs: '0'
    - tableName: ''
    - queryTimeout: '10000'
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - databaseUsernameOverride: ''
    - shouldEnableBatchQuerying: false
    - doNotThrowOnNoOp: false
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2022-10-12T20:39:10.330Z
